// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AuctionEnded extends ethereum.Event {
  get params(): AuctionEnded__Params {
    return new AuctionEnded__Params(this);
  }
}

export class AuctionEnded__Params {
  _event: AuctionEnded;

  constructor(event: AuctionEnded) {
    this._event = event;
  }

  get auction_number(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class AuctionStarted extends ethereum.Event {
  get params(): AuctionStarted__Params {
    return new AuctionStarted__Params(this);
  }
}

export class AuctionStarted__Params {
  _event: AuctionStarted;

  constructor(event: AuctionStarted) {
    this._event = event;
  }

  get auction_number(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class AuctionStarterSet extends ethereum.Event {
  get params(): AuctionStarterSet__Params {
    return new AuctionStarterSet__Params(this);
  }
}

export class AuctionStarterSet__Params {
  _event: AuctionStarterSet;

  constructor(event: AuctionStarterSet) {
    this._event = event;
  }

  get starter(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class AutopayBatchSizeSet extends ethereum.Event {
  get params(): AutopayBatchSizeSet__Params {
    return new AutopayBatchSizeSet__Params(this);
  }
}

export class AutopayBatchSizeSet__Params {
  _event: AutopayBatchSizeSet;

  constructor(event: AutopayBatchSizeSet) {
    this._event = event;
  }

  get batch_size(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class BidAdded extends ethereum.Event {
  get params(): BidAdded__Params {
    return new BidAdded__Params(this);
  }
}

export class BidAdded__Params {
  _event: BidAdded;

  constructor(event: BidAdded) {
    this._event = event;
  }

  get bidder(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get validator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get opportunity(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get auction_number(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class BidTokenSet extends ethereum.Event {
  get params(): BidTokenSet__Params {
    return new BidTokenSet__Params(this);
  }
}

export class BidTokenSet__Params {
  _event: BidTokenSet;

  constructor(event: BidTokenSet) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class FastLaneFeeSet extends ethereum.Event {
  get params(): FastLaneFeeSet__Params {
    return new FastLaneFeeSet__Params(this);
  }
}

export class FastLaneFeeSet__Params {
  _event: FastLaneFeeSet;

  constructor(event: FastLaneFeeSet) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MinimumAutoshipThresholdSet extends ethereum.Event {
  get params(): MinimumAutoshipThresholdSet__Params {
    return new MinimumAutoshipThresholdSet__Params(this);
  }
}

export class MinimumAutoshipThresholdSet__Params {
  _event: MinimumAutoshipThresholdSet;

  constructor(event: MinimumAutoshipThresholdSet) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MinimumBidIncrementSet extends ethereum.Event {
  get params(): MinimumBidIncrementSet__Params {
    return new MinimumBidIncrementSet__Params(this);
  }
}

export class MinimumBidIncrementSet__Params {
  _event: MinimumBidIncrementSet;

  constructor(event: MinimumBidIncrementSet) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OpportunityAddressDisabled extends ethereum.Event {
  get params(): OpportunityAddressDisabled__Params {
    return new OpportunityAddressDisabled__Params(this);
  }
}

export class OpportunityAddressDisabled__Params {
  _event: OpportunityAddressDisabled;

  constructor(event: OpportunityAddressDisabled) {
    this._event = event;
  }

  get opportunity(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get auction_number(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OpportunityAddressEnabled extends ethereum.Event {
  get params(): OpportunityAddressEnabled__Params {
    return new OpportunityAddressEnabled__Params(this);
  }
}

export class OpportunityAddressEnabled__Params {
  _event: OpportunityAddressEnabled;

  constructor(event: OpportunityAddressEnabled) {
    this._event = event;
  }

  get opportunity(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get auction_number(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OpsSet extends ethereum.Event {
  get params(): OpsSet__Params {
    return new OpsSet__Params(this);
  }
}

export class OpsSet__Params {
  _event: OpsSet;

  constructor(event: OpsSet) {
    this._event = event;
  }

  get ops(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PausedStateSet extends ethereum.Event {
  get params(): PausedStateSet__Params {
    return new PausedStateSet__Params(this);
  }
}

export class PausedStateSet__Params {
  _event: PausedStateSet;

  constructor(event: PausedStateSet) {
    this._event = event;
  }

  get state(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class ResolverMaxGasPriceSet extends ethereum.Event {
  get params(): ResolverMaxGasPriceSet__Params {
    return new ResolverMaxGasPriceSet__Params(this);
  }
}

export class ResolverMaxGasPriceSet__Params {
  _event: ResolverMaxGasPriceSet;

  constructor(event: ResolverMaxGasPriceSet) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ValidatorAddressDisabled extends ethereum.Event {
  get params(): ValidatorAddressDisabled__Params {
    return new ValidatorAddressDisabled__Params(this);
  }
}

export class ValidatorAddressDisabled__Params {
  _event: ValidatorAddressDisabled;

  constructor(event: ValidatorAddressDisabled) {
    this._event = event;
  }

  get validator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get auction_number(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ValidatorAddressEnabled extends ethereum.Event {
  get params(): ValidatorAddressEnabled__Params {
    return new ValidatorAddressEnabled__Params(this);
  }
}

export class ValidatorAddressEnabled__Params {
  _event: ValidatorAddressEnabled;

  constructor(event: ValidatorAddressEnabled) {
    this._event = event;
  }

  get validator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get auction_number(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ValidatorPreferencesSet extends ethereum.Event {
  get params(): ValidatorPreferencesSet__Params {
    return new ValidatorPreferencesSet__Params(this);
  }
}

export class ValidatorPreferencesSet__Params {
  _event: ValidatorPreferencesSet;

  constructor(event: ValidatorPreferencesSet) {
    this._event = event;
  }

  get validator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get minAutoshipAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get validatorPayableAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ValidatorWithdrawnBalance extends ethereum.Event {
  get params(): ValidatorWithdrawnBalance__Params {
    return new ValidatorWithdrawnBalance__Params(this);
  }
}

export class ValidatorWithdrawnBalance__Params {
  _event: ValidatorWithdrawnBalance;

  constructor(event: ValidatorWithdrawnBalance) {
    this._event = event;
  }

  get validator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get auction_number(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get destination(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get caller(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class WithdrawStuckERC20 extends ethereum.Event {
  get params(): WithdrawStuckERC20__Params {
    return new WithdrawStuckERC20__Params(this);
  }
}

export class WithdrawStuckERC20__Params {
  _event: WithdrawStuckERC20;

  constructor(event: WithdrawStuckERC20) {
    this._event = event;
  }

  get receiver(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class WithdrawStuckNativeToken extends ethereum.Event {
  get params(): WithdrawStuckNativeToken__Params {
    return new WithdrawStuckNativeToken__Params(this);
  }
}

export class WithdrawStuckNativeToken__Params {
  _event: WithdrawStuckNativeToken;

  constructor(event: WithdrawStuckNativeToken) {
    this._event = event;
  }

  get receiver(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class FastLaneAuction__checkerResult {
  value0: boolean;
  value1: Bytes;

  constructor(value0: boolean, value1: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBytes(this.value1));
    return map;
  }

  getCanExec(): boolean {
    return this.value0;
  }

  getExecPayload(): Bytes {
    return this.value1;
  }
}

export class FastLaneAuction__findFinalizedAuctionWinnerAtAuctionResult {
  value0: boolean;
  value1: Address;
  value2: BigInt;

  constructor(value0: boolean, value1: Address, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getValue0(): boolean {
    return this.value0;
  }

  getValue1(): Address {
    return this.value1;
  }

  getValue2(): BigInt {
    return this.value2;
  }
}

export class FastLaneAuction__findLastFinalizedAuctionWinnerResult {
  value0: boolean;
  value1: Address;
  value2: BigInt;

  constructor(value0: boolean, value1: Address, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getValue0(): boolean {
    return this.value0;
  }

  getValue1(): Address {
    return this.value1;
  }

  getValue2(): BigInt {
    return this.value2;
  }
}

export class FastLaneAuction__findLiveAuctionTopBidResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class FastLaneAuction__getAutopayJobsResult {
  value0: boolean;
  value1: Array<Address>;

  constructor(value0: boolean, value1: Array<Address>) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromAddressArray(this.value1));
    return map;
  }

  getHasJobs(): boolean {
    return this.value0;
  }

  getAutopayRecipients(): Array<Address> {
    return this.value1;
  }
}

export class FastLaneAuction__getCheckpointResultValue0Struct extends ethereum.Tuple {
  get pendingBalanceAtlastBid(): BigInt {
    return this[0].toBigInt();
  }

  get outstandingBalance(): BigInt {
    return this[1].toBigInt();
  }

  get lastWithdrawnAuction(): BigInt {
    return this[2].toBigInt();
  }

  get lastBidReceivedAuction(): BigInt {
    return this[3].toBigInt();
  }
}

export class FastLaneAuction__getPreferencesResultValue0Struct extends ethereum.Tuple {
  get minAutoshipAmount(): BigInt {
    return this[0].toBigInt();
  }

  get validatorPayableAddress(): Address {
    return this[1].toAddress();
  }
}

export class FastLaneAuction__getStatusResultValue0Struct extends ethereum.Tuple {
  get activeAtAuction(): BigInt {
    return this[0].toBigInt();
  }

  get inactiveAtAuction(): BigInt {
    return this[1].toBigInt();
  }

  get kind(): i32 {
    return this[2].toI32();
  }
}

export class FastLaneAuction extends ethereum.SmartContract {
  static bind(address: Address): FastLaneAuction {
    return new FastLaneAuction("FastLaneAuction", address);
  }

  MAX_AUCTION_VALUE(): BigInt {
    let result = super.call(
      "MAX_AUCTION_VALUE",
      "MAX_AUCTION_VALUE():(uint128)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_AUCTION_VALUE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_AUCTION_VALUE",
      "MAX_AUCTION_VALUE():(uint128)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  auctionStarter(): Address {
    let result = super.call("auctionStarter", "auctionStarter():(address)", []);

    return result[0].toAddress();
  }

  try_auctionStarter(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "auctionStarter",
      "auctionStarter():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  auction_live(): boolean {
    let result = super.call("auction_live", "auction_live():(bool)", []);

    return result[0].toBoolean();
  }

  try_auction_live(): ethereum.CallResult<boolean> {
    let result = super.tryCall("auction_live", "auction_live():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  auction_number(): BigInt {
    let result = super.call("auction_number", "auction_number():(uint128)", []);

    return result[0].toBigInt();
  }

  try_auction_number(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "auction_number",
      "auction_number():(uint128)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  autopay_batch_size(): i32 {
    let result = super.call(
      "autopay_batch_size",
      "autopay_batch_size():(uint16)",
      []
    );

    return result[0].toI32();
  }

  try_autopay_batch_size(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "autopay_batch_size",
      "autopay_batch_size():(uint16)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  bid_increment(): BigInt {
    let result = super.call("bid_increment", "bid_increment():(uint256)", []);

    return result[0].toBigInt();
  }

  try_bid_increment(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "bid_increment",
      "bid_increment():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  bid_token(): Address {
    let result = super.call("bid_token", "bid_token():(address)", []);

    return result[0].toAddress();
  }

  try_bid_token(): ethereum.CallResult<Address> {
    let result = super.tryCall("bid_token", "bid_token():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  checker(): FastLaneAuction__checkerResult {
    let result = super.call("checker", "checker():(bool,bytes)", []);

    return new FastLaneAuction__checkerResult(
      result[0].toBoolean(),
      result[1].toBytes()
    );
  }

  try_checker(): ethereum.CallResult<FastLaneAuction__checkerResult> {
    let result = super.tryCall("checker", "checker():(bool,bytes)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new FastLaneAuction__checkerResult(
        value[0].toBoolean(),
        value[1].toBytes()
      )
    );
  }

  endAuction(): boolean {
    let result = super.call("endAuction", "endAuction():(bool)", []);

    return result[0].toBoolean();
  }

  try_endAuction(): ethereum.CallResult<boolean> {
    let result = super.tryCall("endAuction", "endAuction():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  fast_lane_fee(): i32 {
    let result = super.call("fast_lane_fee", "fast_lane_fee():(uint24)", []);

    return result[0].toI32();
  }

  try_fast_lane_fee(): ethereum.CallResult<i32> {
    let result = super.tryCall("fast_lane_fee", "fast_lane_fee():(uint24)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  findFinalizedAuctionWinnerAtAuction(
    auction_index: BigInt,
    validatorAddress: Address,
    opportunityAddress: Address
  ): FastLaneAuction__findFinalizedAuctionWinnerAtAuctionResult {
    let result = super.call(
      "findFinalizedAuctionWinnerAtAuction",
      "findFinalizedAuctionWinnerAtAuction(uint128,address,address):(bool,address,uint128)",
      [
        ethereum.Value.fromUnsignedBigInt(auction_index),
        ethereum.Value.fromAddress(validatorAddress),
        ethereum.Value.fromAddress(opportunityAddress)
      ]
    );

    return new FastLaneAuction__findFinalizedAuctionWinnerAtAuctionResult(
      result[0].toBoolean(),
      result[1].toAddress(),
      result[2].toBigInt()
    );
  }

  try_findFinalizedAuctionWinnerAtAuction(
    auction_index: BigInt,
    validatorAddress: Address,
    opportunityAddress: Address
  ): ethereum.CallResult<
    FastLaneAuction__findFinalizedAuctionWinnerAtAuctionResult
  > {
    let result = super.tryCall(
      "findFinalizedAuctionWinnerAtAuction",
      "findFinalizedAuctionWinnerAtAuction(uint128,address,address):(bool,address,uint128)",
      [
        ethereum.Value.fromUnsignedBigInt(auction_index),
        ethereum.Value.fromAddress(validatorAddress),
        ethereum.Value.fromAddress(opportunityAddress)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new FastLaneAuction__findFinalizedAuctionWinnerAtAuctionResult(
        value[0].toBoolean(),
        value[1].toAddress(),
        value[2].toBigInt()
      )
    );
  }

  findLastFinalizedAuctionWinner(
    validatorAddress: Address,
    opportunityAddress: Address
  ): FastLaneAuction__findLastFinalizedAuctionWinnerResult {
    let result = super.call(
      "findLastFinalizedAuctionWinner",
      "findLastFinalizedAuctionWinner(address,address):(bool,address,uint128)",
      [
        ethereum.Value.fromAddress(validatorAddress),
        ethereum.Value.fromAddress(opportunityAddress)
      ]
    );

    return new FastLaneAuction__findLastFinalizedAuctionWinnerResult(
      result[0].toBoolean(),
      result[1].toAddress(),
      result[2].toBigInt()
    );
  }

  try_findLastFinalizedAuctionWinner(
    validatorAddress: Address,
    opportunityAddress: Address
  ): ethereum.CallResult<
    FastLaneAuction__findLastFinalizedAuctionWinnerResult
  > {
    let result = super.tryCall(
      "findLastFinalizedAuctionWinner",
      "findLastFinalizedAuctionWinner(address,address):(bool,address,uint128)",
      [
        ethereum.Value.fromAddress(validatorAddress),
        ethereum.Value.fromAddress(opportunityAddress)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new FastLaneAuction__findLastFinalizedAuctionWinnerResult(
        value[0].toBoolean(),
        value[1].toAddress(),
        value[2].toBigInt()
      )
    );
  }

  findLiveAuctionTopBid(
    validatorAddress: Address,
    opportunityAddress: Address
  ): FastLaneAuction__findLiveAuctionTopBidResult {
    let result = super.call(
      "findLiveAuctionTopBid",
      "findLiveAuctionTopBid(address,address):(uint256,uint128)",
      [
        ethereum.Value.fromAddress(validatorAddress),
        ethereum.Value.fromAddress(opportunityAddress)
      ]
    );

    return new FastLaneAuction__findLiveAuctionTopBidResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_findLiveAuctionTopBid(
    validatorAddress: Address,
    opportunityAddress: Address
  ): ethereum.CallResult<FastLaneAuction__findLiveAuctionTopBidResult> {
    let result = super.tryCall(
      "findLiveAuctionTopBid",
      "findLiveAuctionTopBid(address,address):(uint256,uint128)",
      [
        ethereum.Value.fromAddress(validatorAddress),
        ethereum.Value.fromAddress(opportunityAddress)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new FastLaneAuction__findLiveAuctionTopBidResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  getActivePrivilegesAuctionNumber(): BigInt {
    let result = super.call(
      "getActivePrivilegesAuctionNumber",
      "getActivePrivilegesAuctionNumber():(uint128)",
      []
    );

    return result[0].toBigInt();
  }

  try_getActivePrivilegesAuctionNumber(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getActivePrivilegesAuctionNumber",
      "getActivePrivilegesAuctionNumber():(uint128)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAutopayJobs(
    batch_size: i32,
    auction_index: BigInt
  ): FastLaneAuction__getAutopayJobsResult {
    let result = super.call(
      "getAutopayJobs",
      "getAutopayJobs(uint16,uint128):(bool,address[])",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(batch_size)),
        ethereum.Value.fromUnsignedBigInt(auction_index)
      ]
    );

    return new FastLaneAuction__getAutopayJobsResult(
      result[0].toBoolean(),
      result[1].toAddressArray()
    );
  }

  try_getAutopayJobs(
    batch_size: i32,
    auction_index: BigInt
  ): ethereum.CallResult<FastLaneAuction__getAutopayJobsResult> {
    let result = super.tryCall(
      "getAutopayJobs",
      "getAutopayJobs(uint16,uint128):(bool,address[])",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(batch_size)),
        ethereum.Value.fromUnsignedBigInt(auction_index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new FastLaneAuction__getAutopayJobsResult(
        value[0].toBoolean(),
        value[1].toAddressArray()
      )
    );
  }

  getCheckpoint(
    who: Address
  ): FastLaneAuction__getCheckpointResultValue0Struct {
    let result = super.call(
      "getCheckpoint",
      "getCheckpoint(address):((uint256,uint256,uint128,uint128))",
      [ethereum.Value.fromAddress(who)]
    );

    return changetype<FastLaneAuction__getCheckpointResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getCheckpoint(
    who: Address
  ): ethereum.CallResult<FastLaneAuction__getCheckpointResultValue0Struct> {
    let result = super.tryCall(
      "getCheckpoint",
      "getCheckpoint(address):((uint256,uint256,uint128,uint128))",
      [ethereum.Value.fromAddress(who)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<FastLaneAuction__getCheckpointResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getPreferences(
    who: Address
  ): FastLaneAuction__getPreferencesResultValue0Struct {
    let result = super.call(
      "getPreferences",
      "getPreferences(address):((uint256,address))",
      [ethereum.Value.fromAddress(who)]
    );

    return changetype<FastLaneAuction__getPreferencesResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getPreferences(
    who: Address
  ): ethereum.CallResult<FastLaneAuction__getPreferencesResultValue0Struct> {
    let result = super.tryCall(
      "getPreferences",
      "getPreferences(address):((uint256,address))",
      [ethereum.Value.fromAddress(who)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<FastLaneAuction__getPreferencesResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getStatus(who: Address): FastLaneAuction__getStatusResultValue0Struct {
    let result = super.call(
      "getStatus",
      "getStatus(address):((uint128,uint128,uint8))",
      [ethereum.Value.fromAddress(who)]
    );

    return changetype<FastLaneAuction__getStatusResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getStatus(
    who: Address
  ): ethereum.CallResult<FastLaneAuction__getStatusResultValue0Struct> {
    let result = super.tryCall(
      "getStatus",
      "getStatus(address):((uint128,uint128,uint8))",
      [ethereum.Value.fromAddress(who)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<FastLaneAuction__getStatusResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getValidatorsActiveAtAuction(auction_index: BigInt): Array<Address> {
    let result = super.call(
      "getValidatorsActiveAtAuction",
      "getValidatorsActiveAtAuction(uint128):(address[])",
      [ethereum.Value.fromUnsignedBigInt(auction_index)]
    );

    return result[0].toAddressArray();
  }

  try_getValidatorsActiveAtAuction(
    auction_index: BigInt
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getValidatorsActiveAtAuction",
      "getValidatorsActiveAtAuction(uint128):(address[])",
      [ethereum.Value.fromUnsignedBigInt(auction_index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  max_gas_price(): BigInt {
    let result = super.call("max_gas_price", "max_gas_price():(uint128)", []);

    return result[0].toBigInt();
  }

  try_max_gas_price(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "max_gas_price",
      "max_gas_price():(uint128)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minAutoShipThreshold(): BigInt {
    let result = super.call(
      "minAutoShipThreshold",
      "minAutoShipThreshold():(uint128)",
      []
    );

    return result[0].toBigInt();
  }

  try_minAutoShipThreshold(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minAutoShipThreshold",
      "minAutoShipThreshold():(uint128)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ops(): Address {
    let result = super.call("ops", "ops():(address)", []);

    return result[0].toAddress();
  }

  try_ops(): ethereum.CallResult<Address> {
    let result = super.tryCall("ops", "ops():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  outstandingFLBalance(): BigInt {
    let result = super.call(
      "outstandingFLBalance",
      "outstandingFLBalance():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_outstandingFLBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "outstandingFLBalance",
      "outstandingFLBalance():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class DisableOpportunityAddressCall extends ethereum.Call {
  get inputs(): DisableOpportunityAddressCall__Inputs {
    return new DisableOpportunityAddressCall__Inputs(this);
  }

  get outputs(): DisableOpportunityAddressCall__Outputs {
    return new DisableOpportunityAddressCall__Outputs(this);
  }
}

export class DisableOpportunityAddressCall__Inputs {
  _call: DisableOpportunityAddressCall;

  constructor(call: DisableOpportunityAddressCall) {
    this._call = call;
  }

  get opportunityAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DisableOpportunityAddressCall__Outputs {
  _call: DisableOpportunityAddressCall;

  constructor(call: DisableOpportunityAddressCall) {
    this._call = call;
  }
}

export class DisableValidatorAddressCall extends ethereum.Call {
  get inputs(): DisableValidatorAddressCall__Inputs {
    return new DisableValidatorAddressCall__Inputs(this);
  }

  get outputs(): DisableValidatorAddressCall__Outputs {
    return new DisableValidatorAddressCall__Outputs(this);
  }
}

export class DisableValidatorAddressCall__Inputs {
  _call: DisableValidatorAddressCall;

  constructor(call: DisableValidatorAddressCall) {
    this._call = call;
  }

  get _validatorAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DisableValidatorAddressCall__Outputs {
  _call: DisableValidatorAddressCall;

  constructor(call: DisableValidatorAddressCall) {
    this._call = call;
  }
}

export class EnableOpportunityAddressCall extends ethereum.Call {
  get inputs(): EnableOpportunityAddressCall__Inputs {
    return new EnableOpportunityAddressCall__Inputs(this);
  }

  get outputs(): EnableOpportunityAddressCall__Outputs {
    return new EnableOpportunityAddressCall__Outputs(this);
  }
}

export class EnableOpportunityAddressCall__Inputs {
  _call: EnableOpportunityAddressCall;

  constructor(call: EnableOpportunityAddressCall) {
    this._call = call;
  }

  get opportunityAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class EnableOpportunityAddressCall__Outputs {
  _call: EnableOpportunityAddressCall;

  constructor(call: EnableOpportunityAddressCall) {
    this._call = call;
  }
}

export class EnableValidatorAddressCall extends ethereum.Call {
  get inputs(): EnableValidatorAddressCall__Inputs {
    return new EnableValidatorAddressCall__Inputs(this);
  }

  get outputs(): EnableValidatorAddressCall__Outputs {
    return new EnableValidatorAddressCall__Outputs(this);
  }
}

export class EnableValidatorAddressCall__Inputs {
  _call: EnableValidatorAddressCall;

  constructor(call: EnableValidatorAddressCall) {
    this._call = call;
  }

  get _validatorAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class EnableValidatorAddressCall__Outputs {
  _call: EnableValidatorAddressCall;

  constructor(call: EnableValidatorAddressCall) {
    this._call = call;
  }
}

export class EnableValidatorAddressWithPreferencesCall extends ethereum.Call {
  get inputs(): EnableValidatorAddressWithPreferencesCall__Inputs {
    return new EnableValidatorAddressWithPreferencesCall__Inputs(this);
  }

  get outputs(): EnableValidatorAddressWithPreferencesCall__Outputs {
    return new EnableValidatorAddressWithPreferencesCall__Outputs(this);
  }
}

export class EnableValidatorAddressWithPreferencesCall__Inputs {
  _call: EnableValidatorAddressWithPreferencesCall;

  constructor(call: EnableValidatorAddressWithPreferencesCall) {
    this._call = call;
  }

  get _validatorAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _minAutoshipAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _validatorPayableAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class EnableValidatorAddressWithPreferencesCall__Outputs {
  _call: EnableValidatorAddressWithPreferencesCall;

  constructor(call: EnableValidatorAddressWithPreferencesCall) {
    this._call = call;
  }
}

export class EndAuctionCall extends ethereum.Call {
  get inputs(): EndAuctionCall__Inputs {
    return new EndAuctionCall__Inputs(this);
  }

  get outputs(): EndAuctionCall__Outputs {
    return new EndAuctionCall__Outputs(this);
  }
}

export class EndAuctionCall__Inputs {
  _call: EndAuctionCall;

  constructor(call: EndAuctionCall) {
    this._call = call;
  }
}

export class EndAuctionCall__Outputs {
  _call: EndAuctionCall;

  constructor(call: EndAuctionCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class InitCall extends ethereum.Call {
  get inputs(): InitCall__Inputs {
    return new InitCall__Inputs(this);
  }

  get outputs(): InitCall__Outputs {
    return new InitCall__Outputs(this);
  }
}

export class InitCall__Inputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }

  get _initial_bid_token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _ops(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _starter(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class InitCall__Outputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }
}

export class ProcessAutopayJobsCall extends ethereum.Call {
  get inputs(): ProcessAutopayJobsCall__Inputs {
    return new ProcessAutopayJobsCall__Inputs(this);
  }

  get outputs(): ProcessAutopayJobsCall__Outputs {
    return new ProcessAutopayJobsCall__Outputs(this);
  }
}

export class ProcessAutopayJobsCall__Inputs {
  _call: ProcessAutopayJobsCall;

  constructor(call: ProcessAutopayJobsCall) {
    this._call = call;
  }

  get autopayRecipients(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class ProcessAutopayJobsCall__Outputs {
  _call: ProcessAutopayJobsCall;

  constructor(call: ProcessAutopayJobsCall) {
    this._call = call;
  }
}

export class RedeemOutstandingBalanceCall extends ethereum.Call {
  get inputs(): RedeemOutstandingBalanceCall__Inputs {
    return new RedeemOutstandingBalanceCall__Inputs(this);
  }

  get outputs(): RedeemOutstandingBalanceCall__Outputs {
    return new RedeemOutstandingBalanceCall__Outputs(this);
  }
}

export class RedeemOutstandingBalanceCall__Inputs {
  _call: RedeemOutstandingBalanceCall;

  constructor(call: RedeemOutstandingBalanceCall) {
    this._call = call;
  }

  get outstandingValidatorWithBalance(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RedeemOutstandingBalanceCall__Outputs {
  _call: RedeemOutstandingBalanceCall;

  constructor(call: RedeemOutstandingBalanceCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetAutopayBatchSizeCall extends ethereum.Call {
  get inputs(): SetAutopayBatchSizeCall__Inputs {
    return new SetAutopayBatchSizeCall__Inputs(this);
  }

  get outputs(): SetAutopayBatchSizeCall__Outputs {
    return new SetAutopayBatchSizeCall__Outputs(this);
  }
}

export class SetAutopayBatchSizeCall__Inputs {
  _call: SetAutopayBatchSizeCall;

  constructor(call: SetAutopayBatchSizeCall) {
    this._call = call;
  }

  get size(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetAutopayBatchSizeCall__Outputs {
  _call: SetAutopayBatchSizeCall;

  constructor(call: SetAutopayBatchSizeCall) {
    this._call = call;
  }
}

export class SetBidTokenCall extends ethereum.Call {
  get inputs(): SetBidTokenCall__Inputs {
    return new SetBidTokenCall__Inputs(this);
  }

  get outputs(): SetBidTokenCall__Outputs {
    return new SetBidTokenCall__Outputs(this);
  }
}

export class SetBidTokenCall__Inputs {
  _call: SetBidTokenCall;

  constructor(call: SetBidTokenCall) {
    this._call = call;
  }

  get _bid_token_address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetBidTokenCall__Outputs {
  _call: SetBidTokenCall;

  constructor(call: SetBidTokenCall) {
    this._call = call;
  }
}

export class SetFastlaneFeeCall extends ethereum.Call {
  get inputs(): SetFastlaneFeeCall__Inputs {
    return new SetFastlaneFeeCall__Inputs(this);
  }

  get outputs(): SetFastlaneFeeCall__Outputs {
    return new SetFastlaneFeeCall__Outputs(this);
  }
}

export class SetFastlaneFeeCall__Inputs {
  _call: SetFastlaneFeeCall;

  constructor(call: SetFastlaneFeeCall) {
    this._call = call;
  }

  get _fastLaneFee(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetFastlaneFeeCall__Outputs {
  _call: SetFastlaneFeeCall;

  constructor(call: SetFastlaneFeeCall) {
    this._call = call;
  }
}

export class SetMinimumAutoShipThresholdCall extends ethereum.Call {
  get inputs(): SetMinimumAutoShipThresholdCall__Inputs {
    return new SetMinimumAutoShipThresholdCall__Inputs(this);
  }

  get outputs(): SetMinimumAutoShipThresholdCall__Outputs {
    return new SetMinimumAutoShipThresholdCall__Outputs(this);
  }
}

export class SetMinimumAutoShipThresholdCall__Inputs {
  _call: SetMinimumAutoShipThresholdCall;

  constructor(call: SetMinimumAutoShipThresholdCall) {
    this._call = call;
  }

  get _minAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinimumAutoShipThresholdCall__Outputs {
  _call: SetMinimumAutoShipThresholdCall;

  constructor(call: SetMinimumAutoShipThresholdCall) {
    this._call = call;
  }
}

export class SetMinimumBidIncrementCall extends ethereum.Call {
  get inputs(): SetMinimumBidIncrementCall__Inputs {
    return new SetMinimumBidIncrementCall__Inputs(this);
  }

  get outputs(): SetMinimumBidIncrementCall__Outputs {
    return new SetMinimumBidIncrementCall__Outputs(this);
  }
}

export class SetMinimumBidIncrementCall__Inputs {
  _call: SetMinimumBidIncrementCall;

  constructor(call: SetMinimumBidIncrementCall) {
    this._call = call;
  }

  get _bid_increment(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinimumBidIncrementCall__Outputs {
  _call: SetMinimumBidIncrementCall;

  constructor(call: SetMinimumBidIncrementCall) {
    this._call = call;
  }
}

export class SetOffchainCheckerDisabledStateCall extends ethereum.Call {
  get inputs(): SetOffchainCheckerDisabledStateCall__Inputs {
    return new SetOffchainCheckerDisabledStateCall__Inputs(this);
  }

  get outputs(): SetOffchainCheckerDisabledStateCall__Outputs {
    return new SetOffchainCheckerDisabledStateCall__Outputs(this);
  }
}

export class SetOffchainCheckerDisabledStateCall__Inputs {
  _call: SetOffchainCheckerDisabledStateCall;

  constructor(call: SetOffchainCheckerDisabledStateCall) {
    this._call = call;
  }

  get state(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetOffchainCheckerDisabledStateCall__Outputs {
  _call: SetOffchainCheckerDisabledStateCall;

  constructor(call: SetOffchainCheckerDisabledStateCall) {
    this._call = call;
  }
}

export class SetOpsCall extends ethereum.Call {
  get inputs(): SetOpsCall__Inputs {
    return new SetOpsCall__Inputs(this);
  }

  get outputs(): SetOpsCall__Outputs {
    return new SetOpsCall__Outputs(this);
  }
}

export class SetOpsCall__Inputs {
  _call: SetOpsCall;

  constructor(call: SetOpsCall) {
    this._call = call;
  }

  get _ops(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOpsCall__Outputs {
  _call: SetOpsCall;

  constructor(call: SetOpsCall) {
    this._call = call;
  }
}

export class SetPausedStateCall extends ethereum.Call {
  get inputs(): SetPausedStateCall__Inputs {
    return new SetPausedStateCall__Inputs(this);
  }

  get outputs(): SetPausedStateCall__Outputs {
    return new SetPausedStateCall__Outputs(this);
  }
}

export class SetPausedStateCall__Inputs {
  _call: SetPausedStateCall;

  constructor(call: SetPausedStateCall) {
    this._call = call;
  }

  get state(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetPausedStateCall__Outputs {
  _call: SetPausedStateCall;

  constructor(call: SetPausedStateCall) {
    this._call = call;
  }
}

export class SetResolverMaxGasPriceCall extends ethereum.Call {
  get inputs(): SetResolverMaxGasPriceCall__Inputs {
    return new SetResolverMaxGasPriceCall__Inputs(this);
  }

  get outputs(): SetResolverMaxGasPriceCall__Outputs {
    return new SetResolverMaxGasPriceCall__Outputs(this);
  }
}

export class SetResolverMaxGasPriceCall__Inputs {
  _call: SetResolverMaxGasPriceCall;

  constructor(call: SetResolverMaxGasPriceCall) {
    this._call = call;
  }

  get _maxgas(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetResolverMaxGasPriceCall__Outputs {
  _call: SetResolverMaxGasPriceCall;

  constructor(call: SetResolverMaxGasPriceCall) {
    this._call = call;
  }
}

export class SetStarterCall extends ethereum.Call {
  get inputs(): SetStarterCall__Inputs {
    return new SetStarterCall__Inputs(this);
  }

  get outputs(): SetStarterCall__Outputs {
    return new SetStarterCall__Outputs(this);
  }
}

export class SetStarterCall__Inputs {
  _call: SetStarterCall;

  constructor(call: SetStarterCall) {
    this._call = call;
  }

  get _starter(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetStarterCall__Outputs {
  _call: SetStarterCall;

  constructor(call: SetStarterCall) {
    this._call = call;
  }
}

export class SetValidatorPreferencesCall extends ethereum.Call {
  get inputs(): SetValidatorPreferencesCall__Inputs {
    return new SetValidatorPreferencesCall__Inputs(this);
  }

  get outputs(): SetValidatorPreferencesCall__Outputs {
    return new SetValidatorPreferencesCall__Outputs(this);
  }
}

export class SetValidatorPreferencesCall__Inputs {
  _call: SetValidatorPreferencesCall;

  constructor(call: SetValidatorPreferencesCall) {
    this._call = call;
  }

  get _minAutoshipAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _validatorPayableAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetValidatorPreferencesCall__Outputs {
  _call: SetValidatorPreferencesCall;

  constructor(call: SetValidatorPreferencesCall) {
    this._call = call;
  }
}

export class StartAuctionCall extends ethereum.Call {
  get inputs(): StartAuctionCall__Inputs {
    return new StartAuctionCall__Inputs(this);
  }

  get outputs(): StartAuctionCall__Outputs {
    return new StartAuctionCall__Outputs(this);
  }
}

export class StartAuctionCall__Inputs {
  _call: StartAuctionCall;

  constructor(call: StartAuctionCall) {
    this._call = call;
  }
}

export class StartAuctionCall__Outputs {
  _call: StartAuctionCall;

  constructor(call: StartAuctionCall) {
    this._call = call;
  }
}

export class SubmitBidCall extends ethereum.Call {
  get inputs(): SubmitBidCall__Inputs {
    return new SubmitBidCall__Inputs(this);
  }

  get outputs(): SubmitBidCall__Outputs {
    return new SubmitBidCall__Outputs(this);
  }
}

export class SubmitBidCall__Inputs {
  _call: SubmitBidCall;

  constructor(call: SubmitBidCall) {
    this._call = call;
  }

  get bid(): SubmitBidCallBidStruct {
    return changetype<SubmitBidCallBidStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class SubmitBidCall__Outputs {
  _call: SubmitBidCall;

  constructor(call: SubmitBidCall) {
    this._call = call;
  }
}

export class SubmitBidCallBidStruct extends ethereum.Tuple {
  get validatorAddress(): Address {
    return this[0].toAddress();
  }

  get opportunityAddress(): Address {
    return this[1].toAddress();
  }

  get searcherContractAddress(): Address {
    return this[2].toAddress();
  }

  get searcherPayableAddress(): Address {
    return this[3].toAddress();
  }

  get bidAmount(): BigInt {
    return this[4].toBigInt();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawStuckERC20Call extends ethereum.Call {
  get inputs(): WithdrawStuckERC20Call__Inputs {
    return new WithdrawStuckERC20Call__Inputs(this);
  }

  get outputs(): WithdrawStuckERC20Call__Outputs {
    return new WithdrawStuckERC20Call__Outputs(this);
  }
}

export class WithdrawStuckERC20Call__Inputs {
  _call: WithdrawStuckERC20Call;

  constructor(call: WithdrawStuckERC20Call) {
    this._call = call;
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WithdrawStuckERC20Call__Outputs {
  _call: WithdrawStuckERC20Call;

  constructor(call: WithdrawStuckERC20Call) {
    this._call = call;
  }
}

export class WithdrawStuckNativeTokenCall extends ethereum.Call {
  get inputs(): WithdrawStuckNativeTokenCall__Inputs {
    return new WithdrawStuckNativeTokenCall__Inputs(this);
  }

  get outputs(): WithdrawStuckNativeTokenCall__Outputs {
    return new WithdrawStuckNativeTokenCall__Outputs(this);
  }
}

export class WithdrawStuckNativeTokenCall__Inputs {
  _call: WithdrawStuckNativeTokenCall;

  constructor(call: WithdrawStuckNativeTokenCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawStuckNativeTokenCall__Outputs {
  _call: WithdrawStuckNativeTokenCall;

  constructor(call: WithdrawStuckNativeTokenCall) {
    this._call = call;
  }
}
